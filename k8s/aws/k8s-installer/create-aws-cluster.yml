# Creating-aws-cluster.yml
########################################################################################################################################################################
#Steps:

#1. Creating ssh public key
#2. Generate Random name for cluster
#3. Creating aws bucket for storing cluster information
#4. Creating cluster in aws using exixting VPC
#5. Creating a file which store cluster name
#6. Taint node if taint_value is defined
########################################################################################################################################################################

---
- hosts: localhost

  vars_files:
    - vars.yml

  vars:
    cluster_name:
    ssh_key_path: "~/.ssh/id_rsa"
    subnet_id: "{{ lookup('lines', 'grep subnet_id /tmp/aws/id.csv | cut -d, -f3 | cut -d: -f2') }}"
    vpc_id: "{{ lookup('lines', 'grep vpc_id /tmp/aws/id.csv | cut -d, -f1 | cut -d: -f2') }}"

  tasks:
    - block:
        - name: Generate ssh public key
          shell: mkdir -p ~/.ssh && ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa

        - name: Generate random Cluster name
          command: python ../../utils/name_generator/namesgenerator.py
          register: cluster_name
          when: not cluster_name
        - set_fact:
            cluster_name: "{{ cluster_name.stdout }}"
          when: cluster_name.stdout is defined 

        - name: AWS bucket creating
          s3_bucket:
            name: "k8s-bucket-{{ cluster_name }}"
            region: "{{ region }}"
            state: present

        - name: AWS Cluster creating started
          command: kops create cluster --name k8s-{{ cluster_name }}.k8s.local --zones {{ zone }} --node-count {{ node_count }} --state s3://k8s-bucket-{{ cluster_name }} --vpc {{ vpc_id }} --image {{ image }} --subnets {{ subnet_id }} --master-size {{ master_size }} --node-size {{ node_size }} --kubernetes-version {{ k8s_version }} --networking {{ networking }} --ssh-public-key {{ ssh_key_path }} --yes

        - name: Create a csv file for store cluster name
          lineinfile:
            create: yes
            state: present
            path: "/tmp/aws/cluster_name.csv"
            line: 'cluster_name:{{ cluster_name }}'
            mode: 0755
        
        - name: Checking Cluster availability
          shell: python ../../utils/health/cluster_health_check.py -n {{ node_count | int + 1 }}

        - block:
            - name: Getting nodes name
              shell: kubectl get nodes -o jsonpath='{.items[?(@.metadata.labels.kubernetes\.io/role=="node")].metadata.name}' | awk '{print $1}'
              register: node_name

            - name: Taint node using key and value
              shell: kubectl taint nodes {{ node_name.stdout }} {{ taint_value }}

            - name: Create a file for store taint node property
              lineinfile:
                create: yes
                state: present
                path: "/tmp/aws/node_property"
                line: 'taint_node_name: {{ node_name.stdout }}, taint_value: {{ taint_value }}'
                mode: 0755
          when: taint_value is defined

        - name: Set Test Status
          set_fact:
            flag: "Test Passed"
    
      rescue:
        - name: Set Test Status
          set_fact:
            flag: "Test Failed"

        - fail:
            msg: "Cluster creation failed"
